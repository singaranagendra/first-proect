Branching
--------------

This feature is provided in git, so that developers can create code related to different functionalities  on seprate branches.
This helps the development team in creating the code in an uncluttered way.
Later this code can be merged with master branch.
Default branch of git is "Master"


Developer

Home Page   --  f1  f2   f3
Services   --  f4  f5
Contact US  --  f6  f7   f8

branch


git  init  --  master

+++++++++++++++++++++++++++++++++


git branch  branchname 

git  branch test

++++++++++++++
Remote repository  ( Github )

Git rebase


Git  rebase
==============
This is called as fastforward merge.
The commits from the child branch are added to the top of the master branch.
This is helpful when we want code from a branch to be reflected as the latest working version on master.


Rearrange the commit order
---------------------------
git rebase -i HEAD~4


Merge the commit's using "squash"
--------------------------------
git rebase -i HEAD~4
Remove the pick word and replace it with squash

++++++++++++++++++


How to selectively pickup the commit's from child branch ( Cherry-pick )

$ git  cherry-pick   7fed4ce    86f93d2     ( commit id's)



Git stash
-----------


git  init
touch  f1   f2
git  add  .
git  commit  -m "a"

touch  f3    f4
git  add .
touch   f5     f6   

git  status  (  2  staged file,   2  untracked files )





git  stash
git  status  (   2  untracked files )
git  add .
git  commit  -m "b"

git  status  (  Working tree is clean  )

git  stash  pop  
git  status   (  2  staged  files )

git commit  -m  "c"

touch   f7   f8
git  add .
touch   f9  f10
git  status   (  2  staged , 2 untracked )

git  stash  -u  
git  status  ( Working tree is clean )

++++++++++++++++++++++++
Notes:
This feature is used for leaving unfinished work, in such a way that Git cannot access it and continue  work on some other files.

Further commands of git should be able to process only  the new files.
This can be done using git stash.

Commands
--------------------
1) To stash  the stagged files
 $  git  stash

2) To stash  staged and untracked files
$  git  stash  -u

3) To see the list of stashes
    git  stash  list

4) TO get back the stashed files
   git  stash pop

5) to bring the older stash  out
  git  stash  pop  stash@{stash_number}



+++++++++++++++++++++

Git Ammend
----------------

$ git commit  --amend  -m "b"


How to go back to previous version of code
----------------------------------------------
git reset --hard f1cd7c3



git remote add origin https://github.com/sunildevops77/rep22.git

git push -u origin master



